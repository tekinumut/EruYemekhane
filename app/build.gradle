buildscript {
    apply from: "../dependencies.gradle"
}
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

def keystorePropertiesFile = rootProject.file("Certificates/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// Secret Keys
def secretsFile = rootProject.file("Certificates/secrets.properties")
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretsFile))

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.Mtkn.umutt.eruyemekhane"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.version_code
        versionName versions.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
            storeFile file('../Certificates/EruYemekhane.jks')
        }
    }
    buildTypes {
        debug {
            resValue "string", "app_name", "EruTestYemek"
            resValue "string", "admob_app_id", "${secretProperties['admobAppIdTest']}"
            resValue "string", "adUnitIdMainBanner", "${secretProperties['adUnitIdBannerAdTest']}"
            resValue "string", "adUnitIdRemoveBanner", "${secretProperties['adUnitIdRewardedAdTest']}"
            buildConfigField "String", "BASE_URL", '"https://www.erciyes.edu.tr/tr/2/"'
            minifyEnabled false
            applicationIdSuffix '.debug'
        }
        release {
            resValue "string", "app_name", "EruYemekhane"
            resValue "string", "admob_app_id", "${secretProperties['admobAppId']}"
            resValue "string", "adUnitIdMainBanner", "${secretProperties['adUnitIdMainBanner']}"
            resValue "string", "adUnitIdRemoveBanner", "${secretProperties['adUnitIdRemoveBanner']}"
            buildConfigField "String", "BASE_URL", '"https://www.erciyes.edu.tr/tr/2/"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.applicationId}-${variant.versionName}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

kapt {
    // Dagger Hilt
    correctErrorTypes true
}

dependencies {
    implementation "androidx.core:core-ktx:$versions.ktx"
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "com.google.android.material:material:$versions.material"

    // Views
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefresh"

    // Lifecycle + ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$versions.room"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    // Datastore
    implementation "androidx.datastore:datastore-preferences:$versions.dataStore"

    // Preference Settings
    implementation "androidx.preference:preference-ktx:$versions.preference"

    // Browser CustomTabs
    implementation "androidx.browser:browser:$versions.browser"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$versions.firebaseBom")
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'

    // Ads
    implementation "com.google.android.gms:play-services-ads:$versions.gmsAds"

    // 3rd Dependencies
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$versions.retrofit"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakCanary"

    // OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$versions.okhttp"))
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Jsoup
    implementation "org.jsoup:jsoup:$versions.jsoup"

    // Lottie
    implementation "com.airbnb.android:lottie:$versions.lottieVersion"

    // Local Unit Tests
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "androidx.arch.core:core-testing:$versions.coreTesting"
    testImplementation "junit:junit:$versions.junit"

    // Instrument Unit Test
    androidTestImplementation "com.google.truth:truth:$versions.truth"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.coreTesting"
    androidTestImplementation "androidx.test.ext:junit:$versions.testExtJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.testEspresso"
}